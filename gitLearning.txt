git作者是linux的作者，最初linux开源后贡献者很多，就用git来
管理各种版本(所以很多linux命令)

每个人有个本地仓库，一个人开发就在本地就ok

工作区add到暂存区，再commit到本地库，要修改就
从本地库check out到工作区

实际开发中和别人协作、交换代码，要用远程仓库；只需将本地的
发送(push)到远程就好，别人要用就复制(clone)一份到自己的本地仓库
clone是从无到整个有的过程

pull是已有内容，从远程库获得最新commit内容并合并(merge)到本地
////merge是怎么个merge法？代码修改后能这么智能的merge？

每次从本地库push到远程库之前都要先git pull再操作，
保证push到远程仓库时没有版本冲突
////是先git pull 再根据最新内容写我自己的内容吗？
万一我一写完要push但远程又不一样了呢？

======本地仓库初始化=======
1...在相应文件夹建立仓库
(1.BUSH:git init/2.GUI:creat、3.直接用乌龟)

.git就是本地库，它所在的目录就是工作区

2...向本地库添加文件必须先加在工作区：
(1./2./3.右键用乌龟add)
就添加到了暂存区(图标有个加号)
继续右键(或者就在之前页面commit)用乌龟git commit-->master(默认的主分支)
(需要写日志信息)就到了本地(工作区图标有个绿勾)

=======修改=======
在工作区用乌龟git，有个repo-browser，可以看到本地库内容
在工作区对内容进行了修改会要求重新commit
对于这个内容，用乌龟右键show log可以查看修改历史，
也可以直接选中进行比较差异

=======删除========
在工作区目录删除!=在本地仓库中删除，本地仓中还有
若删了后再commit，就是在本地仓库中就没了（commit是整个目录的一起操作
在工作区目录删除可以用乌龟revert(回收站里也有啊)

乌龟右键有delete keep local
然后再commit
可以只从本地库中删除但仍然留在工作区

===========
github就是应运而生的远程仓库 大家都本着开源精神(private need dollas)
(国内的也有:gitee.com)
github上新生成仓库时，下面都是解释告诉你怎么做。
还没有仓库就第一种，在本地已建好仓库就直接第二种

====使用SSH上传到远程仓库===
ssh是很好的网络协议 有公钥私钥非对称加密
在gitBUSH中 输入ssh-keygen -t rsa
一路回车生成秘钥对(在用户(我是196333)的.ssh里)
分公钥和私钥
在github setting中复制好自己的公钥 自己电脑上存好私钥
(以后再建立联系就不要密码什么的了)
{
然后在工作区用gitBUSH按照github提示输入
git remote add origin （ssh：xxxx）//不一定非要叫origin 只是个连接名
$ git branch -M main
$ git push -u origin main
然后github上的仓库就有了
}
{用乌龟：
在工作区点git gync...-->manage-->在remote写好名字(如origin)，url复制路径
putty key选好私钥，添加保存就建好联系了
然后点击push就可以了
}

=====使用https上传到远程仓库=====
{用乌龟：
在工作区点git gync...-->manage-->在remote写好名字(如origin)，url复制路径
不需要秘钥，然后点击push，接着输入github用户名密码就行
}

=====克隆远程仓库到本地======
（针对github上所有开源）
建新文件夹
复制url
{
    gitBUSH输入git clone （url）就ok
    （文件修改都能看）
}
{
    用乌龟右键就有clone(没有.git就自动有clone)
}

=======协同作业=======
修改哪个文件就提交哪个文件，别人就下载哪个文件
在local改变了某个文件，提交到本地后pull到far即可替换；
但是和别人的修改出现冲突(别人pull的最新版本来改的)就会push失败，只能拉取pull
返回别人和你的修改内容，让你手动合并，点击解决冲突，然后再push

若far某文件有了变化，想clone到本地
工作区页面点git gync(同步)，点击拉取pull，那far多出来的文件夹local就有了 更换的也被更换了
=========
github结束，至于真正工程需要自己建私有git的远程仓库(不可能在github上啊)，
那个视频最后就有说（大概就是选择另一个主机的本地仓库当大家的远程仓库
